{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","toggleGood","item","itemInArray","indexOf","splice","push","setState","clearSelected","goods","this","className","length","slice","join","type","onClick","map","classNames","includes","event","preventDefault","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8PAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,WAAa,SAACC,GACZ,IAAQF,EAAkB,EAAKD,MAAvBC,cACFG,EAAcH,EAAcI,QAAQF,IAErB,IAAjBC,EACFH,EAAcK,OAAOF,EAAa,GAElCH,EAAcM,KAAKJ,GAGrB,EAAKK,SAAS,CAAEP,mB,EAGlBQ,cAAgB,WACd,EAAKD,SAAS,CAAEP,cAAe,M,4CAGjC,WAAU,IAlCYS,EAkCb,OACCT,EAAkBU,KAAKX,MAAvBC,cAER,OACE,sBAAKW,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,4BAIA,mBAAGA,UAAU,qBAAb,UA5CcF,EA6CIT,EA5CtBS,EAAMG,QAAU,EACZ,GAAN,OAAUH,EAAMI,MAAM,GAAI,GAAGC,KAAK,MAAlC,gBAA+CL,EAAMI,OAAO,GAA5D,iBAGKJ,EAAMG,OAAN,UAAkBH,EAAM,GAAxB,gBAA2C,uBA2CzCT,EAAcY,OAEX,wBACEG,KAAK,SACLJ,UAAU,YACVK,QAASN,KAAKF,cAHhB,eAQA,MAGN,oBAAIG,UAAU,kBAAd,SACGd,EAAgBoB,KAAI,SAAAf,GAAI,OACvB,qBAAeS,UAAU,kBAAzB,UACE,mBAAGA,UACDO,IACE,YACA,CAAE,sBAAuBlB,EAAcmB,SAASjB,KAHpD,SAOGA,IAGH,wBACEa,KAAK,SACLJ,UAAU,YACVK,QAAS,SAAAI,GACPA,EAAMC,iBACN,EAAKpB,WAAWC,IALpB,SAQGF,EAAcmB,SAASjB,GAAQ,SAAW,UAnBtCA,e,GAnDHoB,IAAMC,WAgFTzB,IC3Gf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.73afe4c4.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst createSentence = (goods: string[]): string => {\n  if (goods.length >= 2) {\n    return `${goods.slice(0, -1).join(', ')} and ${goods.slice(-1)} are selected`;\n  }\n\n  return goods.length ? `${goods[0]} is selected` : 'No goods selected';\n};\n\ntype State = {\n  selectedGoods: string[]\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  toggleGood = (item: string) => {\n    const { selectedGoods } = this.state;\n    const itemInArray = selectedGoods.indexOf(item);\n\n    if (itemInArray !== -1) {\n      selectedGoods.splice(itemInArray, 1);\n    } else {\n      selectedGoods.push(item);\n    }\n\n    this.setState({ selectedGoods });\n  };\n\n  clearSelected = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__main\">\n          <h1 className=\"App__title\">\n            Selected good:\n          </h1>\n\n          <p className=\"App__selected-list\">\n            {createSentence(selectedGoods)}\n          </p>\n\n          {selectedGoods.length\n            ? (\n              <button\n                type=\"button\"\n                className=\"button-23\"\n                onClick={this.clearSelected}\n              >\n                x\n              </button>\n            )\n            : ''}\n        </div>\n\n        <ul className=\"App__goods-list\">\n          {goodsFromServer.map(item => (\n            <li key={item} className=\"App__goods-item\">\n              <p className={(\n                classNames(\n                  'App__item',\n                  { 'App__item--selected': selectedGoods.includes(item) },\n                )\n              )}\n              >\n                {item}\n              </p>\n\n              <button\n                type=\"button\"\n                className=\"button-23\"\n                onClick={event => {\n                  event.preventDefault();\n                  this.toggleGood(item);\n                }}\n              >\n                {selectedGoods.includes(item) ? 'Remove' : 'Add'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}